{"version":3,"sources":["assets/LostChameleon.mp3","assets/TheHipsta.mp3","assets/Tobu.mp3","MusicPlayerContext.js","hooks/useMusicPlayer.js","components/TrackList.js","components/PlayerControls.js","App.js","reportWebVitals.js","index.js"],"names":["MusicPlayerContext","React","createContext","MusicPlayerProvider","props","useState","audioPlayer","Audio","tracks","name","file","LostChameleon","Rock","Tobu","currentTrackIndex","isPlaying","state","setState","Provider","value","children","useMusicPlayer","useContext","playTrack","index","togglePlay","pause","play","currentTrackName","trackList","playPreviousTrack","length","playNextTrack","TrackList","map","track","className","onClick","icon","faPause","faPlay","PlayerControls","disabled","faStepBackward","faStepForward","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69eb3905.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LostChameleon.4ab9a38b.mp3\";","export default __webpack_public_path__ + \"static/media/TheHipsta.85de41f3.mp3\";","export default __webpack_public_path__ + \"static/media/Tobu.fc27b42c.mp3\";","import React, { useState } from 'react';\r\nimport LostChameleon from './assets/LostChameleon.mp3';\r\nimport Rock from './assets/TheHipsta.mp3';\r\nimport Tobu from './assets/Tobu.mp3';\r\n\r\nconst MusicPlayerContext = React.createContext([{}, () => {}]);\r\n\r\nconst MusicPlayerProvider = (props) => {\r\n  const [state, setState] = useState({\r\n    audioPlayer: new Audio(),\r\n    tracks: [\r\n      {\r\n        name: 'Lost Chameleon - Genesis',\r\n        file: LostChameleon,\r\n      },\r\n      {\r\n        name: 'The Hipsta - Shaken Soda',\r\n        file: Rock,\r\n      },\r\n      {\r\n        name: 'Tobu - Such Fun',\r\n        file: Tobu,\r\n      },\r\n    ],\r\n    currentTrackIndex: null,\r\n    isPlaying: false,\r\n  });\r\n  return (\r\n    <MusicPlayerContext.Provider value={[state, setState]}>\r\n      {props.children}\r\n    </MusicPlayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport { MusicPlayerContext, MusicPlayerProvider };","import { useContext } from 'react';\r\nimport { MusicPlayerContext } from \"../MusicPlayerContext\";\r\n\r\nconst useMusicPlayer = () => {\r\n  const [state, setState] = useContext(MusicPlayerContext);\r\n\r\n  function playTrack(index) {\r\n    if (index === state.currentTrackIndex) {\r\n      togglePlay();\r\n    } else {\r\n      state.audioPlayer.pause();\r\n      state.audioPlayer = new Audio(state.tracks[index].file);\r\n      state.audioPlayer.play();\r\n      setState(state => ({ ...state, currentTrackIndex: index, isPlaying: true }));\r\n    }\r\n  }\r\n\r\n  function togglePlay() {\r\n    if (state.isPlaying) {\r\n      state.audioPlayer.pause();\r\n    } else {\r\n      state.audioPlayer.play();\r\n    }\r\n    setState(state => ({ ...state, isPlaying: !state.isPlaying }));\r\n  }\r\n\r\n  function playPreviousTrack() {\r\n    const newIndex = ((state.currentTrackIndex + -1) % state.tracks.length + state.tracks.length) % state.tracks.length;\r\n    playTrack(newIndex);\r\n  }\r\n\r\n  function playNextTrack() {\r\n    const newIndex = (state.currentTrackIndex + 1) % state.tracks.length;\r\n    playTrack(newIndex);\r\n  }\r\n\r\n  return {\r\n    playTrack,\r\n    togglePlay,\r\n    currentTrackName: state.currentTrackIndex !== null && state.tracks[state.currentTrackIndex].name,\r\n    trackList: state.tracks,\r\n    isPlaying: state.isPlaying,\r\n    playPreviousTrack,\r\n    playNextTrack,\r\n  }\r\n};\r\n\r\nexport default useMusicPlayer;\r\n","import React from \"react\";\r\nimport useMusicPlayer from \"../hooks/useMusicPlayer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlay, faPause} from \"@fortawesome/free-solid-svg-icons\";\r\nfunction TrackList() {\r\n  const { trackList, currentTrackName, playTrack, isPlaying } = useMusicPlayer();\r\n  return (\r\n    <>\r\n      {trackList.map((track, index) => (\r\n        <div className=\"box\">\r\n          <button className=\"button\" onClick={() => playTrack(index)}>\r\n            {currentTrackName === track.name && isPlaying ? <FontAwesomeIcon icon={faPause} /> : <FontAwesomeIcon icon={faPlay} />}\r\n          </button>\r\n          <div className=\"song-title\">\r\n            {track.name}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TrackList","import React from \"react\"\r\nimport useMusicPlayer from \"../hooks/useMusicPlayer\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPause, faPlay, faStepBackward, faStepForward} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction PlayerControls() {\r\n  const { isPlaying, currentTrackName, togglePlay, playPreviousTrack, playNextTrack } = useMusicPlayer();\r\n  return (\r\n    <>\r\n      <div className=\"box controls has-background-grey-dark\">\r\n        <div className=\"current-track has-text-light\">\r\n          <marquee>{currentTrackName}</marquee>\r\n        </div>\r\n        <div>\r\n          <button className=\"button has-text-light has-background-grey-dark\" onClick={playPreviousTrack} disabled={!currentTrackName}>\r\n            <FontAwesomeIcon icon={faStepBackward} />\r\n          </button>\r\n          <button className=\"button has-text-light has-background-grey-dark\" onClick={togglePlay} disabled={!currentTrackName}>\r\n            {isPlaying ? <FontAwesomeIcon icon={faPause} /> : <FontAwesomeIcon icon={faPlay} />}\r\n          </button>\r\n          <button className=\"button has-text-light has-background-grey-dark\" onClick={playNextTrack} disabled={!currentTrackName}>\r\n            <FontAwesomeIcon icon={faStepForward} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlayerControls\r\n","import React from 'react';\nimport TrackList from \"./components/TrackList\";\nimport PlayerControls from \"./components/PlayerControls\";\nimport { MusicPlayerProvider } from \"./MusicPlayerContext\";\nimport 'bulma/css/bulma.css'\n\nfunction App() {\n  return (\n    <MusicPlayerProvider>\n      <div className=\"container\">\n        <TrackList />\n        <PlayerControls />\n      </div>\n    </MusicPlayerProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}